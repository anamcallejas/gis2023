ggplot(sf.provinces) +
geom_sf(aes(fill=region)) +
coord_sf(crs = "+proj=wintri")
ggplot(sf.provinces) +
geom_sf(aes(fill=region)) +
coord_sf(crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
# Geopackage:
sf.andorra <- st_read('../../../Downloads/gadm41_AND.gpkg')
# Geopackage:
sf.andorra <- st_read('../../../Downloads/gadm41_AND.gpkg')
# Geopackage:
sf.andorra <- st_read('gadm41_AND.gpkg')
# Has multiple layers: which one to use?
st_layers('gadm41_AND.gpkg')
sf.andorra <- st_read('gadm41_AND.gpkg', 'ADM_ADM_1')
sf.andorra
# won't work
sf.andorra <- st_read('gadm41_AND_1.json')
# after unzipping it:
sf.andorra <- st_read('gadm41_AND_1.json')
# Let us use the world dataset for that:
sf.world <- world
sf.world[1:3,] # basic R 'vector' syntax
sf.world[,1:3]
# Using dplyr syntax:
sf.world %>%
slice(1:3)
sf.world %>%
select(1:3) # or by names, as we already did
# Filtering: countries with population>100 million
sf.world %>%
filter(pop>100000000) # select variables
# 3.2. Aggregating
sf.world.agg <- world %>%
group_by(continent) %>%
summarize(pop = sum(pop))
# Likely error: how to solve it?
# https://stackoverflow.com/questions/68478179/how-to-resolve-spherical-geometry-failures-when-joining-spatial-data
sf_use_s2(F)
sf.world.agg <- sf.world %>%
group_by(continent) %>%
summarize(pop = sum(pop))
sf.world.agg <- sf.world %>%
group_by(continent) %>%
summarize(pop = sum(pop))
sf.world.agg <- sf.world %>%
group_by(continent) %>%
summarize(pop = sum(pop,na.rm=T))
ggplot(sf.world.agg) +
geom_sf(aes(fill=pop))
ggplot(sf.world.agg) +
geom_sf(aes(fill=as.factor(pop)))
sf.world.agg <- sf.world %>%
group_by(continent) %>%
summarise(pop = sum(pop,na.rm = T), area = sum(area_km2,na.rm = T))
ggplot(sf.world.agg) +
geom_sf(aes(fill=as.factor(area)))
rm(sf.world.agg)
# Suppose we have an additional dataset
df.coffe <- coffee_data
df.coffe
sf.world.merged <-sf.world %>%
left_join(df.coffe)
sf.world %>%
select(name_long,continent) %>%
left_join(df.coffe)
ggplot(sf.world.merged) +
geom_sf(aes(fill=coffee_production_2017))
# Here I artificially change names in the coffe data:
df.coffe <- df.coffe %>%
rename(country.name = name_long)
# Try to merge:
sf.world %>%
left_join(df.coffe)
# Telling which variables link the two datasets:
sf.world %>%
left_join(df.coffe,by = c(name_long =  'country.name'))
# Coffe per capita:
sf.world.merged <- sf.world.merged %>%
mutate(coffee_capita = coffee_production_2016/pop)
ggplot(sf.world.merged) +
geom_sf(aes(fill=coffee_capita))
ggplot(sf.world.merged) +
geom_sf(aes(fill=(coffee_production_2016/area_km2)))
linestring_matrix<-rbind(c(3.2,4), c(3, 4.6), c(3.8, 4.4), c(3.5, 3.8), c(3.4, 3.6), c(3.9, 4.5))
gm.multipoints<-st_multipoint(linestring_matrix)
gm.multipoints
linestring_matrix<-rbind(c(0,3),c(0,4), c(1,5), c(2,5))
gm.line<-st_linestring(linestring_matrix)
polygon_list<-list(rbind(c(0,0), c(1,0), c(3,2), c(2,4), c(1,4), c(0,0)))
polygon_list<-list(rbind(c(0,0), c(1,0), c(3,2), c(2,4), c(1,4), c(0,0)))
gm.polyg<-st_polygon(polygon_list)
ggplot(gm.multipoints) +
geom_sf()
View(gm.polyg)
ggplot(gm.polyg) +
geom_sf()
gc <- st_geometrycollection(list(gm.multipoints,gm.line, gm.polyg))
ggplot(gc) +
geom_sf()
rm(list = ls())
sf.airp<-st_read("ne_10m_airports.shp")
sf.airp<-st_read("\ne_10m_airports\ne_10m_airports.shp")
sf.airp<-st_read("\ne_10m_airports\ne_10m_airports.shp")
sf.airp<-st_read(dsn ="\ne_10m_airports\ne_10m_airports.shp")
sf.airp<-st_read(dsn ="ne_10m_airports.shp")
sf.airp<-st_read(dsn ="ne_10m_airports.shp")
View(sf.airp)
ggplot(sf.airp) +
geom_sf(aes(fill=type))
sf.airport <- st_transform(sf.airp, crs = "EPSG:4326")
ggplot(sf.airp) +
geom_sf(aes(fill=type))
sf.airport <- st_transform(sf.airp, crs = "+proj=moll")
ggplot(sf.airp) +
geom_sf(aes(fill=type))
#Remember to have all the components of the shapefile format in the same directory: the *.shx, *.dbf, and *.prj.
sf.provinces <- st_read( dsn = "ne_110m_admin_1_states_provinces.shp")
sf.provinces
View(sf.provinces)
View(sf.provinces)
sf.provinces <- sf.provinces %>%
select(name, region, region_sub)
plot(sf.provinces) # recall: plot() creates one plot for each field
ggplot(sf.provinces %>% filter(region=='West')) +
geom_sf(aes(fill=region_sub))
datasets::AirPassengers
df.airqual <- data.table(airquality)
df.airqual
df.months <- data.table(Month = 1:12, month.text = month.name)
df.months
merge.data.table(df.airqual,df.months)
df.merged <- merge.data.table(df.airqual,df.months)
library(dplyr)
# Merging:
df.merged <- df.airqual %>%
left_join(df.months)
# Tibbles - class of tidyverse data frames:
df.merged <- tibble(df.merged)
df.merged # Better way of visualizing data frames.
# Selecting specific variables:
df.merged %>%
select(month.text, Day, Wind)
# Filtering a dataset:
df.merged %>%
filter(Month==5)
# Combining operations:
df.merged %>%
filter(month.text=='August') %>%
select(Month,Day,Ozone)
# Rdata files: optimized storage (wrt disk space):
save(df.merged,file = 'merged_dataset.rdata')
# My advise: always export data in csv with 'tab' separator:
fwrite(x = df.merged,file = 'merged_dataset.csv', sep = '\t')
# if you like Stata files:
library(haven)
# Importantly: Stata does not allow for '.' or other
# symbols in the column names. Replace them with '_':
setnames(df.merged, gsub('\\.', '_',tolower(names(df.merged))))
# Exporting it:
write_dta(data = df.merged, path = 'merged_dataset.dta')
library(ggplot2)
# Bar plot:
p <- ggplot(df.merged) +
geom_bar(aes(x = month.text))
p
sf.airp <- sf.airp %>%
select(type)
ggplot(sf.airp) +
geom_sf(aes(fill=type))
rm(list = ls())
sf.airp<-st_read(dsn ="ne_10m_airports.shp")
sf.airp <- sf.airp %>%
select(type)
rm(list = ls())
sf.airp<-st_read(dsn ="ne_10m_airports.shp")
(sf.airp,crs = 'EPSG:4326')
sf.airp <- st_as_sf(sf.airp,crs = 'EPSG:4326')
sf.airp
ggplot(sf.airp) +
geom_sf(data=sf.airp,aes(fill=region))
ggplot(sf.airp) +
geom_sf(data=sf.airp,aes(fill=type))
sf.airp <- sf.airp %>%
select(type)
ggplot(sf.airp) +
geom_sf(data=sf.airp,aes(fill=type))
rm(list = ls())
# Hypothetical dataset of cities:
df.cities <- data.frame(
name = c('Bologna', 'London', 'Madrid', 'Paris'),
temperature = c(31, 21, 29,28),
language = c('Italian', 'English', 'Spanish', 'French'),
longitude = c(11.3,-0.1,-3.7,2.3),
latitude = c(44.4,51.5, 40.4,48.8)
)
sf.cities <- st_as_sf(df.cities,coords = c('longitude', 'latitude'))
sf.cities # watch out CRS (projection)!
sf.cities <- st_as_sf(
df.cities,
coords = c('longitude', 'latitude'),
crs = 'EPSG:4326'
)
sf.cities
sf.EU <- world %>%
filter(continent=='Europe' & name_long!='Russian Federation')
ggplot() +
geom_sf(data=sf.airp,aes(fill=type))
rm(list = ls())
sf.airp<-st_read(dsn ="ne_10m_airports.shp")
sf.airp <- st_as_sf(sf.airp,crs = 'EPSG:4326')
sf.airp
ggplot() +
geom_sf(data=sf.airp,aes(fill=type))
ggplot() +
geom_sf(data = sf.world) +
geom_sf(data = sf.airp , aes(fill=type))
sf.world <- world
ggplot() +
geom_sf(data = sf.world) +
geom_sf(data = sf.airp , aes(fill=type))
ggplot() +
geom_sf(data = sf.world) +
geom_sf(data = sf.airp , aes(color=type))
datasets::worldbank_df
worldbank_df <- read.csv(system.file("misc/worldbank_df.csv", package="spData"))
worldbank_df
rm(list = ls())
worldbank_df <- read.csv(system.file("misc/worldbank_df.csv", package="spData"))
worldbank_df
View(worldbank_df)
dfworld <- tibble(worldbank_df)
dfworldd <- tibble(worldbank_df)
dfworld <- dfworldd %>%
mutate(urban_rate = urban_pop / sum(urban_pop))
View(dfworld)
sum(urban_pop)
dfworld <- dfworldd %>%
mutate(urban_rate = urban_pop / sum(dfworldd$urban_pop))
sum(dfworldd$urban_pop)
dfworld <- dfworldd %>%
mutate(urban_rate = ifelse(urban_pop >= 0, urban_pop/sum(urban_pop, na.rm = TRUE)
,F))
sum(urban_rate, na.rm = TRUE)
sum(dfworld$urban_rate, na.rm = TRUE)
sf.world <- world
View(sf.world)
df.merged<- merge.data.table(dfworldd,sf.world)
df.merged<- merge(dfworldd,sf.world)
View(df.merged)
df.amer<- df.merged  %>%
filter(region_un == 'Americas')
View(df.amer)
df.americas <- df.amer %>%
mutate(urban_rate = ifelse(urban_pop >= 0, urban_pop/sum(urban_pop, na.rm = TRUE)
,F))
View(df.americas)
sum(dfworld$urban_rate, na.rm = TRUE)
ggplot() +
geom_sf(data = sf.world) +
geom_sf(data = df.americas , aes(color=urban_rate))
rlang::last_error()
ggplot() +
geom_sf(data = sf.world) +
geom_sf(data = df.americas)
ggplot() +
geom_sf(data = sf.world)
ggplot() +
geom_sf(data = df.americas)
View(df.amer)
View(df.amer)
View(df.americas)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate)
ggplot() +
geom_sf(data = df.americas)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate) +
ggplot() +
geom_sf(data = df.americas)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate) +
ggplot() +
geom_sf(data = df.americas)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate) +
ggplot() +
geom_sf(data = sf.worl)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate) +
ggplot() +
geom_sf(data = sf.world)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate) +
ggplot() +
geom_sf(data = sf.world)
rm(list = ls())
worldbank_df <- read.csv(system.file("misc/worldbank_df.csv", package="spData"))
dfworldd <- tibble(worldbank_df)
sf.world <- world
df.merged<- merge(dfworldd,sf.world)
df.amer<- df.merged  %>%
filter(region_un == 'Americas')
df.americas <- df.amer %>%
mutate(urban_rate = ifelse(urban_pop >= 0, urban_pop/sum(urban_pop, na.rm = TRUE)
,F))
sum(dfworld$urban_rate, na.rm = TRUE)
sum(df.americas$urban_rate, na.rm = TRUE)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate) +
ggplot() +
geom_sf(data = sf.world)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate) +
ggplot() +
geom_sf(data = sf.world)
ggplot() +
geom_sf(data = sf.world)
ggplot() +
geom_sf(data = df.americas)
ggplot() +
geom_sf(data = dfworldd)
ggplot() +
geom_sf(data = dfworldd) +
geom_sf(data = df.americas)
ggplot() +
geom_sf(data = sf.worldd) +
geom_sf(data = df.americas)
ggplot() +
geom_sf(data = sf.world) +
geom_sf(data = df.americas)
ggplot() +
geom_sf(data = sf.world)
ggplot() +
geom_sf(data = df.amer)
sf.amer <- st_as_sf(df.amer,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = dsf.amer)
ggplot() +
geom_sf(data = sf.amer)
ggplot() +
geom_sf(data = sf.amer)+
geom_sf(data = df.americas)
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = df.americas, aes(color=urban_rate))
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(color=urban_rate))
# EX1: Histogram
rm(list = ls())
df.ex.1 <- data.table(datasets::CO2)
getwd() # learn which is the current working directory
setwd("~/Desktop/")
setwd("C:/Users/amcal/Documentos/Clases/4-GIS/Lecture1")
# load library (its functions will become available):
library(data.table)
#EX2: Murder rates across states
rm(list = ls())
df.ex.2 <- data.table(datasets::state.x77)
dfmurd <- tibble(df.ex.2)
dfmurdd <- dfmurd %>%
mutate(Density = Population/Area) %>%
mutate(high.dens = ifelse(Density >= mean(Density), T, F))
p <- ggplot(dfmurdd) +
geom_point(aes(Income, Murder, color = high.dens)) +
geom_smooth(aes(Income, Murder))
p
# EX1: Histogram
rm(list = ls())
df.ex.1 <- data.table(datasets::CO2)
dfco2 <-tibble(df.ex.1)
p <- ggplot(dfco2) +
geom_histogram(aes(x=uptake, fill = Type))
p
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate))
rm(list = ls())
setwd("C:/Users/amcal/Documentos/Clases/4-GIS/Lecture2")
rm(list = ls())
worldbank_df <- read.csv(system.file("misc/worldbank_df.csv", package="spData"))
dfworldd <- tibble(worldbank_df)
sf.world <- world
df.merged<- merge(dfworldd,sf.world)
df.amer<- df.merged  %>%
filter(region_un == 'Americas')
sf.amer <- st_as_sf(df.amer,crs = 'EPSG:4326')
df.americas <- df.amer %>%
mutate(urban_rate = ifelse(urban_pop >= 0, urban_pop/sum(urban_pop, na.rm = TRUE)
,F))
sum(df.americas$urban_rate, na.rm = TRUE)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate)
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate))
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate)
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
View(df.americas)
View(sf.amer)
df.americas <- sf.amer %>%
mutate(urban_rate = ifelse(urban_pop >= 0, urban_pop/sum(urban_pop, na.rm = TRUE)
,F))
sum(df.americas$urban_rate, na.rm = TRUE)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate)
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate))
View(sf.americas)
df.americas <- sf.amer %>%
mutate(urban_rate = ifelse(urban_pop >= 0, 100*(urban_pop/sum(urban_pop, na.rm = TRUE))
,F))
sum(df.americas$urban_rate, na.rm = TRUE)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate)
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate))
df.americas <- sf.amer %>%
mutate(urban_rate = ifelse(urban_pop >= 0, 100*(urban_pop/pop))
,F))
df.americas <- sf.amer %>%
mutate(urban_rate = ifelse(urban_pop >= 0, 100*(urban_pop/pop))
,F)
sum(df.americas$urban_rate, na.rm = TRUE)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate)
sum(df.americas$urban_rate, na.rm = TRUE)
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate)
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate))
sf.americas <- st_as_sf(df.americas,crs = "+proj=moll")
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate))
tsf.amer <- st_transform(sf.amer, crs = "+proj=moll")
tsf.americas <- st_transform(sf.americas, crs = "+proj=moll")
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate))
sf.amer <- st_as_sf(df.amer,crs = 'EPSG:4326')
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate)) +
coord_sf(crs = "+proj=moll")
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate)) +
coord_sf(crs = "+proj=wintri")
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate)) +
coord_sf(crs = "+proj=moll")
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.americas, aes(fill=urban_rate)) +
coord_sf(crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
View(sf.americas)
df.americas <- df.americas %>%
group_by(subregion) %>%
summarise(mean_literacy=mean(literacy),
.groups = 'drop')
View(df.americas)
df.americas <- df.americas %>%
group_by(subregion) %>%
summarise(mean_literacy=mean(literacy, na.rm=TRUE),
.groups = 'drop')
rm(list = ls())
# Merging data of world and worldbank
worldbank_df <- read.csv(system.file("misc/worldbank_df.csv", package="spData"))
dfworldd <- tibble(worldbank_df)
sf.world <- world
df.merged<- merge(dfworldd,sf.world)
# Filtering by region
df.amer<- df.merged  %>%
filter(region_un == 'Americas')
sf.amer <- st_as_sf(df.amer,crs = 'EPSG:4326')
# Adding column of urban rate
df.americas <- sf.amer %>%
mutate(urban_rate = ifelse(urban_pop >= 0, 100*(urban_pop/pop))
,F)
sum(df.americas$urban_rate, na.rm = TRUE)
# selecting relevant information
df.americas<- df.americas %>%
select(iso_a2,name,urban_pop,literacy,subregion,pop,urban_rate)
sf.americas <- st_as_sf(df.americas,crs = 'EPSG:4326')
df.lamericas <- df.americas %>%
group_by(subregion) %>%
summarise(mean_literacy=mean(literacy, na.rm=TRUE),
.groups = 'drop')
View(df.lamericas)
sf.lamericas <- st_as_sf(df.lamericas,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.lamericas, aes(fill=literacy)) +
coord_sf(crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
ggplot() +
geom_sf(data = sf.amer) +
geom_sf(data = sf.lamericas, aes(fill=mean_literacy)) +
coord_sf(crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
